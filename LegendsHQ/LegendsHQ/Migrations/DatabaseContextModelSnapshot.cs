// <auto-generated />
using System;
using LegendsHQ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegendsHQ.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Ability", b =>
                {
                    b.Property<Guid>("ability_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ability_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ability_icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ability_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ability_type")
                        .HasColumnType("int");

                    b.Property<string>("cooldown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("legend_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("legend_id1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ability_id");

                    b.HasIndex("legend_id1");

                    b.ToTable("abilitys");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.AbilityInteraction", b =>
                {
                    b.Property<Guid>("interaction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ability_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ability_id1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("interaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("interaction_id");

                    b.HasIndex("ability_id1");

                    b.ToTable("abilityInteractions");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.AbilityTips", b =>
                {
                    b.Property<Guid>("tip_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ability_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ability_id1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tip_id");

                    b.HasIndex("ability_id1");

                    b.ToTable("abilityTips");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Legend", b =>
                {
                    b.Property<Guid>("legend_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cost_apex_coins")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cost_legend_tokens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("featuring_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("home_planet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("legend_classclass_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("legend_difficulty")
                        .HasColumnType("int");

                    b.Property<string>("max_health")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("max_speed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passive_ability_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saying")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("season_created")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slogan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tactical_ability_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ultimate_ability_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("video_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("legend_id");

                    b.HasIndex("legend_classclass_id");

                    b.HasIndex("video_id");

                    b.ToTable("legends");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.LegendClass", b =>
                {
                    b.Property<Guid>("class_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("class_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("class_icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("class_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("legend_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("class_id");

                    b.ToTable("legendClasses");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.LegendFinishers", b =>
                {
                    b.Property<Guid>("finisher_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cost_apex_coins")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cost_crafting_materials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cost_legend_tokens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("finisher_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("finisher_video_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("finisher_id");

                    b.ToTable("legendFinishers");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.LegendImages", b =>
                {
                    b.Property<Guid>("image_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("image_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("legend_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("legend_id1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("image_id");

                    b.HasIndex("legend_id1");

                    b.ToTable("legendImages");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.LegendVideo", b =>
                {
                    b.Property<Guid>("video_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("legend_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("video_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("video_id");

                    b.ToTable("legendVideos");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Skin", b =>
                {
                    b.Property<Guid>("skin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cost_apex_coins")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cost_crafting_materials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cost_legend_tokens")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("legend_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("legend_id1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("skin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("skin_id");

                    b.HasIndex("legend_id1");

                    b.ToTable("legendSkins");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Ability", b =>
                {
                    b.HasOne("LegendsHQ.Domain.Entities.Legend", null)
                        .WithMany("abilities")
                        .HasForeignKey("legend_id1");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.AbilityInteraction", b =>
                {
                    b.HasOne("LegendsHQ.Domain.Entities.Ability", null)
                        .WithMany("interactions")
                        .HasForeignKey("ability_id1");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.AbilityTips", b =>
                {
                    b.HasOne("LegendsHQ.Domain.Entities.Ability", null)
                        .WithMany("tips")
                        .HasForeignKey("ability_id1");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Legend", b =>
                {
                    b.HasOne("LegendsHQ.Domain.Entities.LegendClass", "legend_class")
                        .WithMany()
                        .HasForeignKey("legend_classclass_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegendsHQ.Domain.Entities.LegendVideo", "video")
                        .WithMany()
                        .HasForeignKey("video_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("legend_class");

                    b.Navigation("video");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.LegendImages", b =>
                {
                    b.HasOne("LegendsHQ.Domain.Entities.Legend", null)
                        .WithMany("images")
                        .HasForeignKey("legend_id1");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Skin", b =>
                {
                    b.HasOne("LegendsHQ.Domain.Entities.Legend", null)
                        .WithMany("legend_skins")
                        .HasForeignKey("legend_id1");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Ability", b =>
                {
                    b.Navigation("interactions");

                    b.Navigation("tips");
                });

            modelBuilder.Entity("LegendsHQ.Domain.Entities.Legend", b =>
                {
                    b.Navigation("abilities");

                    b.Navigation("images");

                    b.Navigation("legend_skins");
                });
#pragma warning restore 612, 618
        }
    }
}
